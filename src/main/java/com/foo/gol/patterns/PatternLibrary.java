package com.foo.gol.patterns;

import java.util.ArrayList;
import java.util.List;

public class PatternLibrary {
	private List<IPattern> patterns;

	public PatternLibrary() {
		patterns = new ArrayList<>();
		patterns.add(new Pattern(
				"Toad",
				6,
				new int[] {
						0,0,0,0,0,0,
						0,0,0,0,0,0,
						0,1,1,1,0,0,
						0,0,1,1,1,0,
						0,0,0,0,0,0,
						0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Beacon",
				6,
				new int[] {
						0,0,0,0,0,0,
						0,1,1,0,0,0,
						0,1,1,0,0,0,
						0,0,0,1,1,0,
						0,0,0,1,1,0,
						0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Gilder (down-right)",
				5,
				new int[] {
						0,0,0,0,0,
						0,0,0,1,0,
						0,1,0,1,0,
						0,0,1,1,0,
						0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Gilder (down-left)",
				5,
				new int[] {
						0,0,0,0,0,
						0,1,0,0,0,
						0,1,0,1,0,
						0,1,1,0,0,
						0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Gilder (up-right)",
				5,
				new int[] {
						0,0,0,0,0,
						0,0,1,1,0,
						0,1,0,1,0,
						0,0,0,1,0,
						0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Gilder (up-left)",
				5,
				new int[] {
						0,0,0,0,0,
						0,1,1,0,0,
						0,1,0,1,0,
						0,1,0,0,0,
						0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Lightweight Spaceship (right)",
				7,
				new int[] {
						0,0,0,0,0,0,0,
						0,1,0,0,1,0,0,
						0,0,0,0,0,1,0,
						0,1,0,0,0,1,0,
						0,0,1,1,1,1,0,
						0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Lightweight Spaceship (left)",
				7,
				new int[] {
						0,0,0,0,0,0,0,
						0,0,1,0,0,1,0,
						0,1,0,0,0,0,0,
						0,1,0,0,0,1,0,
						0,1,1,1,1,0,0,
						0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Pulsar",
				17,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,
						0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,
						0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,
						0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,
						0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,
						0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,
						0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Pentadecathlon",
				11,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,1,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,1,0,0,0,1,0,0,0,
						0,0,0,1,0,0,0,1,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,1,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,1,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,1,0,0,0,1,0,0,0,
						0,0,0,1,0,0,0,1,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,1,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Gosper's Glider Gun",
				38,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,
						0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,
						0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"101",
				20,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,
						0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,
						0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
						0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,
						0,1,1,0,1,0,1,0,0,1,1,0,0,1,0,1,0,1,1,0,
						0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,
						0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,
						0,1,1,0,1,0,1,0,0,1,1,0,0,1,0,1,0,1,1,0,
						0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,
						0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
						0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,
						0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"1-2-3",
				12,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,1,1,0,0,0,0,0,0,0,
						0,1,0,0,1,0,0,0,0,0,0,0,
						0,1,1,0,1,0,1,1,0,0,0,0,
						0,0,1,0,1,0,0,1,0,0,0,0,
						0,0,1,0,0,0,0,1,0,1,1,0,
						0,0,0,1,1,1,0,1,0,1,1,0,
						0,0,0,0,0,0,1,0,0,0,0,0,
						0,0,0,0,0,1,0,0,0,0,0,0,
						0,0,0,0,0,1,1,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"1-2-3-4",
				13,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,1,0,0,0,0,0,0,
						0,0,0,0,0,1,0,1,0,0,0,0,0,
						0,0,0,0,1,0,1,0,1,0,0,0,0,
						0,0,0,0,1,0,0,0,1,0,0,0,0,
						0,1,1,0,1,0,1,0,1,0,1,1,0,
						0,1,0,1,0,0,0,0,0,1,0,1,0,
						0,0,0,0,1,1,1,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,1,0,0,0,0,0,0,
						0,0,0,0,0,1,0,1,0,0,0,0,0,
						0,0,0,0,0,0,1,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Airforce",
				16,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
						0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,
						0,0,0,0,1,0,1,1,0,0,0,1,0,1,1,0,
						0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,
						0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,
						0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,
						0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Lucas Exploding Gilder Gun",
				7,
				new int[] {
						0,0,0,0,0,0,0,
						0,1,1,1,1,0,0,
						0,1,1,0,0,1,0,
						0,1,0,1,1,1,0,
						0,1,0,1,1,0,0,
						0,0,1,1,0,0,0,
						0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"R-pentomino",
				5,
				new int[] {
						0,0,0,0,0,
						0,0,1,1,0,
						0,1,1,0,0,
						0,0,1,0,0,
						0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Coe ship",
				12,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,1,1,1,1,1,1,0,
						0,0,0,1,1,0,0,0,0,0,1,0,
						0,1,1,0,1,0,0,0,0,0,1,0,
						0,0,0,0,0,1,0,0,0,1,0,0,
						0,0,0,0,0,0,0,1,0,0,0,0,
						0,0,0,0,0,0,0,1,1,0,0,0,
						0,0,0,0,0,0,1,1,1,1,0,0,
						0,0,0,0,0,0,1,1,0,1,1,0,
						0,0,0,0,0,0,0,0,1,1,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Line pulsar",
				41,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				}
		));
		patterns.add(new Pattern(
				"Copperhead spaceship",
				10,
				new int[] {
						0,0,0,0,0,0,0,0,0,0,
						0,0,1,1,0,0,1,1,0,0,
						0,0,0,0,1,1,0,0,0,0,
						0,0,0,0,1,1,0,0,0,0,
						0,1,0,1,0,0,1,0,1,0,
						0,1,0,0,0,0,0,0,1,0,
						0,0,0,0,0,0,0,0,0,0,
						0,1,0,0,0,0,0,0,1,0,
						0,0,1,1,0,0,1,1,0,0,
						0,0,0,1,1,1,1,0,0,0,
						0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,1,1,0,0,0,0,
						0,0,0,0,1,1,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0
				}
		));
	}

	public List<IPattern> getPatterns() {
		return patterns;
	}
}
